
$border_radius_custom: 4px;

@mixin animation($properties) {
    -webkit-animation: $properties;
    -moz-animation: $properties;
    -ms-animation: $properties;
    -o-animation: $properties;
    animation: $properties;
}

@mixin transition($properties...) {
    -webkit-transition: $properties;
    -moz-transition: $properties;
    -ms-transition: $properties;
    -o-transition: $properties;
    transition: $properties;
}

@mixin box-shadow($properties...) {
    -moz-box-shadow: $properties;
    -webkit-box-shadow: $properties;
    -o-box-shadow: $properties;
    box-shadow: $properties;
}


/***********************************************************************/


.main-container {
    display: block;
    width: 100%;
    //background: yellow;
    padding: 10px;
    
    ul {
        list-style: none;
        padding: 0;
        margin: 0 0 0 20px;
    }
    
    .group-conditions {
        position: relative;
        display: block;
        min-height: 60px;
        border-radius: $border_radius_custom;
        margin: 5px;
        padding: 5px;
        
        $color_start: #f5f3f4;
        $color_hover_start: #F4F4F4;
        @for $i from 0 through 15 {
            $darken_value: min(($i + 1) * 6, 100);
            $darken_value_more: min($darken_value + 8, 100);
            $darken_value_more_more: min($darken_value + 20, 100);
            
            &.level-#{$i} {
                background: darken($color_start, $darken_value);
                border: 1px solid darken($color_start, $darken_value_more);
                @include box-shadow(inset 0px 0px 10px 0px darken($color_start, $darken_value_more_more));
		        
		        &:hover {
/* 	                background: darken($color_hover_start, $darken_value); */
                    border-color: #666666;
		        }
                
                .options {
                    border-bottom: 1px solid darken($color_start, $darken_value_more);
                }
            }
        }
        
        span.glyphicon-hand-right {
            cursor: move;
        }
        
        .empty-group {
            text-align: center;
        }
    }
    
    .options {
        p,
        button {
            display: inline-block;
        }
        
        select {
            width: 100px;
            display: inline-block;
        }
    }
    
    .condition {
        display: block;
        margin: 5px;
        padding: 5px;
        border-radius: $border_radius_custom;
        border: 1px solid darken(#63535B, 15);
        background: #63535B;
        color: #ffffff;
        
        input,
        select {
	        width: 100px;
        }
        
        &.drag-in-progress {
            background: pink;
        }
    }
    
    button.align-right {
        float: right;
    }
       
    .drag-in-progress {
        pointer-events: none;
        background: green;
    }
    
    .drop-in-progress {
        background: yellow;
        border: 4px dashed blue;
        
        &:after {
            display: block;
            width: 50px;
            height: 50px;
            background: blue;
        }
    }
    
    .li-group {
        position: relative;
    }
    
    .li-condition,
    .li-group {
        &.ng-enter {
            @include animation(fadeInRight 0.4s);
            
        }
        &.ng-leave {
            @include animation(fadeOutLeft 0.2s);
        }
    }
    
    .threshold {
        &.ng-hide-add {
            @include animation(fadeOut 0.4s);
        }
        &.ng-hide-remove {
            @include animation(fadeIn 0.4s);
        }
    }
}

span.special-info {
    position: absolute;
    left: -300px;
    
    background: yellow;
}

